openapi: "3.0.3"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /auth/registration:
    post:
      description: TODO
      summary: TODO
      operationId: registration
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK

  /auth/login:
    post:
      description: TODO
      summary: TODO
      operationId: login
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK
        500:
          description: ERROR

  # FIXME PLEASE and write description

  /habit/create_habit:
    post:
      description: Create new habit
      summary: TODO
      operationId: createHabit
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdDTO'
        500:
          description: ERROR

  /habit/get_habit/{id}:
    get:
      description: Get habit by id
      summary: TODO
      operationId: getHabit
      parameters:
        - in: path
          name: id
          description: TODO
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HabitDTO'
        500:
          description: ERROR

  /habit/delete_habit:
    delete:
      description: Delete habit by id (FIXME PLEASE)
      summary: TODO
      operationId: deleteHabit
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdDTO'
      responses:
        200:
          description: OK
        500:
          description: ERROR

  /habit/update_habit/{id}:
    put:
      description: Delete habit by id (FIXME PLEASE)
      summary: TODO
      operationId: updateHabit
      parameters:
        - in: path
          name: id
          description: TODO
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitDTO'
      responses:
        200:
          description: OK
        500:
          description: ERROR

  # FIXME TOO
  /habit_list/get_habitList:
    get:
      description: TODO
      summary: TODO
      operationId: getHabitList
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HabitListDTO'
        500:
          description: ERROR

  /user/get_user/{username}:
    get:
      description: Get user
      summary: TODO
      operationId: getUserByUsername
      parameters:
        - in: path
          name: username
          description: TODO
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        500:
          description: ERROR

  /user/delete_user/{username}:
    post:
      description: Delete user
      summary: TODO
      operationId: deleteUserByUsername
      parameters:
        - in: path
          name: username
          description: TODO
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        500:
          description: ERROR

  /user/update_user/{username}:
    put:
      description: Update user
      summary: TODO
      operationId: updateUserByUsername
      parameters:
        - in: path
          name: username
          description: TODO
          required: true
          schema:
            type: string
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        500:
          description: ERROR

components:
  schemas:

    ErrorResponseDTO:
      description: TODO
      type: object
      properties:
        codeError:
          type: integer
          x-constraints:
            - "@NotNull(message = \"Error code should not be null\")"
        message:
          type: string
          x-constraints:
            - "@NotNull(message = \"Message should not be null\")"
      required:
        - codeError
        - message

    HabitDTO:
      description: TODO
      type: object
      properties:
        title:
          description: TODO
          type: string
          x-constraints:
            - "@NotNull(message = \"Title should not be null\")"
            - "@NotBlank"
            - "@Size(max = 50, message = \"Too long username\")"
        description:
          description: TODO
          type: string
          x-constraints:
            - "@NotNull(message = \"Description should not be null\")"
            - "@NotBlank"
            - "@Size(max = 150, message = \"Too long username\")"
        priority:
          description: TODO
          $ref: '#/components/schemas/Priority'
        color:
          description: TODO
          $ref: '#/components/schemas/Color'
        repeats:
          description: TODO
          type: integer
          format: int64
          x-constraints:
            - "@Positive"
        done_dates:
          description: TODO AND FIXME
          type: array
          items:
            type: integer
            format: int64
          x-constraints:
            - "@NotNull(message = \"Done dates should not be null\")"

    HabitListDTO:
      description: TODO
      type: object
      properties:
        id:
          description: TODO
          type: integer
          format: int64
          x-constraints:
            - "@PositiveOrZero"
        name:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This username must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Field can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Name should not be null\")"
            - "@NotBlank"
            - "@Size(min = 3, message = \"Too short username\")"
            - "@Size(max = 20, message = \"Too long username\")"
        habits:
          type: array
          items:
            $ref: '#/components/schemas/HabitDTO'
          x-constraints:
            - "@NotNull(message = \"Habits should not be null\")"

    IdDTO:
      description: хто я?
      type: object
      properties:
        id:
          description: TODO
          type: integer
          format: int64
          x-constraints:
            - "@PositiveOrZero"

    UserDTO:
      description: TODO
      type: object
      properties:
        username:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This username must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Field can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Username should not be null\")"
            - "@NotBlank"
            - "@Size(min = 3, message = \"Too short username\")"
            - "@Size(max = 20, message = \"Too long username\")"
            # todo: check only latin
        password:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This password must contains at least one character\")"
            - "@AtLeastOneDigit(message = \"This password must contains at least one digit\")"
            - "@NotNull(message = \"Password should not be null\")"
            - "@Size(min = 8, message = \"Too short password\")"
        habitListName:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This habit list name must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Field can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Habit list name should not be null\")"
            - "@NotBlank"
            - "@Size(min = 3, message = \"Too short habit list name\")"
            - "@Size(max = 20, message = \"Too long habit list name\")"

    Priority:
      description: TODO
      type: string
      enum:
        - HIGH
        - MIDDLE
        - LOW

    Color:
      description: TODO
      type: string
      enum:
        - RED
        - ORANGE
        - YELLOW
        - LIGHT_GREEN
        - GREEN