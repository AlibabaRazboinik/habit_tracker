openapi: "3.0.3"
info:
  version: 1.0.0
  title: Habit Tracker
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /auth/registration:
    post:
      description: Зарегистрировать нового пользователя
      summary: Регистрация
      operationId: registration
      requestBody:
        description: Необходимые для регистрации данные
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        200:
          description: Зарегистрировал нового пользователя
        400:
          description: Некорректные данные. Ошибка валидации. List<ErrorResponseDTO>, не получилось это передать через openapi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'

  /auth/login:
    post:
      description: Зайти в систему
      summary: Залогиниться
      operationId: login
      requestBody:
        description: Необходимые для входа данные
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPasswordDTO'
      responses:
        200:
          description: Зашел в систему
        403:
          description: Например не верные данные
        500:
          description: Проверь, что все поля указаны

  /habit/create_habit:
    post:
      description: Создать новую привычку
      summary: Создать привычку
      operationId: createHabit
      requestBody:
        description: Данные, необходимые для создания привычки
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitDTO'
      responses:
        200:
          description: Привычка создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdDTO'
        400:
          description: Ошибка валидации

  /habit/get_habit/{id}:
    get:
      description: Получить привычку по id
      summary: Получить привычку
      operationId: getHabit
      parameters:
        - in: path
          name: id
          description: Идентификатор привычки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Привычка найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HabitDTO'

  /habit/delete_habit/{id}:
    delete:
      description: Удалить привычку
      summary: Удалить привычку
      operationId: deleteHabit
      parameters:
        - in: path
          name: id
          description: Идентификатор привычки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Привычка удалена

  /habit/update_habit/{id}:
    put:
      description: Обновить привычку
      summary: Обновление привычки
      operationId: updateHabit
      parameters:
        - in: path
          name: id
          description: Идентификатор привычки
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Новые данные для привычки
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HabitDTO'
      responses:
        200:
          description: Привычка обновилась

  /habit_list/get_habitList:
    get:
      description: Получить лист привычек для авторизованного пользователя
      summary: Получить лист привычек
      operationId: getHabitList
      responses:
        200:
          description: Лист привычек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HabitListDTO'

  /habit_list/update_habitList:
    put:
      description: Обновить лист привычек для авторизованного по имени
      summary: Обновить лист привычек по имени
      operationId: updateHabitList
      requestBody:
        description: Новые данные для привычки
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameDTO'
      responses:
        200:
          description: Лист привычек обновился
        403:
          description: Залогиненный пользователь был удален или никто не залогинился
        500:
          description: Проверь, что имя указано

  /user/get_user/{username}:
    get:
      description: Найти пользователя по имени
      summary: Найти пользователя
      operationId: getUserByUsername
      parameters:
        - in: path
          name: username
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        200:
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithoutPasswordDTO'

  /user/delete_user:
    delete:
      description: Удалить пользователя по имени
      summary: Удалить прользователя
      operationId: deleteUserByUsername
      responses:
        200:
          description: Пользователь удален

  /user/update_user/:
    put:
      description: Обновить пользователя
      summary: Обновить пользователя
      operationId: updateUserByUsername
      requestBody:
        description: Новые значения для текущего пользователя
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWithoutPasswordDTO'
      responses:
        200:
          description: Пользователь обновлен

  /user/update_password/:
    put:
      description: Обновить пароль
      summary: Обновить пароль
      operationId: updatePassword
      requestBody:
        description: Новые значения для текущего пользователя
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
      responses:
        200:
          description: Пользователь обновлен

components:
  schemas:
    ErrorResponseDTO:
      description: Описание ошибки
      type: object
      properties:
        codeError:
          type: string
          description: Код ошибки
          x-constraints:
            - "@NotNull(message = \"Error code should not be null\")"
        message:
          type: string
          description: Сообщение об ошибке (возможно, далее сделаем локализованным)
          x-constraints:
            - "@NotNull(message = \"Message should not be null\")"
      required:
        - codeError
        - message

    HabitDTO:
      description: Описание привычки
      type: object
      properties:
        title:
          description: Название привычки
          type: string
          x-constraints:
            - "@NotNull(message = \"Title should not be null\")"
            - "@NotBlank(message = \"Title should not be blank\")"
            - "@Size(max = 50, message = \"Too long title\")"
        description:
          description: Полное описание привычки
          type: string
          x-constraints:
            - "@NotNull(message = \"Description should not be null\")"
            - "@NotBlank(message = \"Description should not be null\")"
            - "@Size(max = 150, message = \"Too long description\")"
        priority:
          $ref: '#/components/schemas/Priority'
        color:
          $ref: '#/components/schemas/Color'
        repeats:
          description: Количество необходимых повторений привычки
          type: integer
          format: int64
          x-constraints:
            - "@Positive(message = \"Repeats should be positive number\")"
        done_dates:
          description: Список дат, когда привычка была отмечена как выполненная
          type: array
          items:
            type: integer
            format: int64
          x-constraints:
            - "@NotNull(message = \"Done dates should not be null\")"
      required:
        - title
        - description
        - priority
        - color
        - repeats
        - done_dates

    HabitListDTO:
      description: Список привычек
      type: object
      properties:
        name:
          description: Имя списка привычек
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"Habit list name must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Habit list name can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Habit list name should not be null\")"
            - "@NotBlank(message = \"Habit list name should not be blank\")"
            - "@Size(min = 3, message = \"Too short habit list name\")"
            - "@Size(max = 20, message = \"Too long habit list name\")"
        habits:
          description: Список привычек
          type: array
          items:
            $ref: '#/components/schemas/HabitDTO'
          x-constraints:
            - "@NotNull(message = \"Habits should not be null\")"
      required:
        - name
        - habits

    IdDTO:
      description: Идентификатор сущности
      type: object
      properties:
        id:
          description: Идентификатор сущности
          type: integer
          format: int64
          x-constraints:
            - "@PositiveOrZero"
      required:
        - id

    NameDTO:
      description: Имя сущности
      type: object
      properties:
        name:
          description: Имя сущности
          type: string
          x-constraints:
            - "@NotBlank(message = \"Name should not be blank\")"
            - "@Size(min = 3, message = \"Too short name\")"
            - "@Size(max = 20, message = \"Too long name\")"
      required:
        - name

    UserDTO:
      description: Описание пользователя
      type: object
      properties:
        username:
          description: Имя пользователя
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This username must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Username can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Username should not be null\")"
            - "@NotBlank(message = \"Username should not be blank\")"
            - "@Size(min = 3, message = \"Too short username\")"
            - "@Size(max = 20, message = \"Too long username\")"
            # todo: check only latin
        password:
          description: Пароль пользователя
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This password must contains at least one character\")"
            - "@AtLeastOneDigit(message = \"This password must contains at least one digit\")"
            - "@NotNull(message = \"Password should not be null\")"
            - "@Size(min = 8, message = \"Too short password\")"
        habitListName:
          description: Название списка привычек
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This habit list name must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Habit list name can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Habit list name should not be null\")"
            - "@NotBlank(message = \"Habit list name should not be blank\")"
            - "@Size(min = 3, message = \"Too short habit list name\")"
            - "@Size(max = 20, message = \"Too long habit list name\")"
      required:
        - username
        - password
        - habitListName

    UserWithoutPasswordDTO:
      description: TODO
      type: object
      properties:
        username:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This username must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Username can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Username should not be null\")"
            - "@NotBlank(message = \"Username should not be null\")"
            - "@Size(min = 3, message = \"Too short username\")"
            - "@Size(max = 20, message = \"Too long username\")"
            # todo: check only latin
        habitListName:
          description: TODO
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This habit list name must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Habit list name can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Habit list name should not be null\")"
            - "@NotBlank(message = \"Habit list name should not be blank\")"
            - "@Size(min = 3, message = \"Too short habit list name\")"
            - "@Size(max = 20, message = \"Too long habit list name\")"

    LoginPasswordDTO:
      description: Объект, который хранит имя пользователя и пароль
      type: object
      properties:
        username:
          description: Имя пользователя
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This username must contains at least one character\")"
            - "@OnlyLettersDigitsUnderscore(message = \"Username can contains only letters, digits or underscore\")"
            - "@NotNull(message = \"Username should not be null\")"
            - "@NotBlank(message = \"Username should not be null\")"
            - "@Size(min = 3, message = \"Too short username\")"
            - "@Size(max = 20, message = \"Too long username\")"
            # todo: check only latin
        password:
          description: Пароль пользователя
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This password must contains at least one character\")"
            - "@AtLeastOneDigit(message = \"This password must contains at least one digit\")"
            - "@NotNull(message = \"Password should not be null\")"
            - "@Size(min = 8, message = \"Too short password\")"
      required:
        - username
        - password

    ChangePasswordDTO:
      description: Объект, который хранит старый и новый пароль
      type: object
      properties:
        oldPassword:
          description: Старый пароль
          type: string
        newPassword:
          description: Новый пароль
          type: string
          x-constraints:
            - "@AtLeastOneLetter(message = \"This password must contains at least one character\")"
            - "@AtLeastOneDigit(message = \"This password must contains at least one digit\")"
            - "@NotNull(message = \"Password should not be null\")"
            - "@Size(min = 8, message = \"Too short password\")"
      required:
        - oldPassword
        - newPassword

    Priority:
      description: Возможные варианты приоритета
      type: string
      enum:
        - HIGH
        - MIDDLE
        - LOW

    Color:
      description: Возможные цвета
      type: string
      enum:
        - RED
        - ORANGE
        - YELLOW
        - LIGHT_GREEN
        - GREEN